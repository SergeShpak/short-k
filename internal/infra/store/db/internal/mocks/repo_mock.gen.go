// Code generated by MockGen. DO NOT EDIT.
// Source: db.go
//
// Generated by this command:
//
//	mockgen -source=db.go -destination=internal/mocks/repo_mock.gen.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	queries "shortik/internal/infra/store/db/internal/queries"

	gomock "go.uber.org/mock/gomock"
)

// Mockhandler is a mock of handler interface.
type Mockhandler struct {
	ctrl     *gomock.Controller
	recorder *MockhandlerMockRecorder
}

// MockhandlerMockRecorder is the mock recorder for Mockhandler.
type MockhandlerMockRecorder struct {
	mock *Mockhandler
}

// NewMockhandler creates a new mock instance.
func NewMockhandler(ctrl *gomock.Controller) *Mockhandler {
	mock := &Mockhandler{ctrl: ctrl}
	mock.recorder = &MockhandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockhandler) EXPECT() *MockhandlerMockRecorder {
	return m.recorder
}

// GetURL mocks base method.
func (m *Mockhandler) GetURL(ctx context.Context, slug string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", ctx, slug)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockhandlerMockRecorder) GetURL(ctx, slug any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*Mockhandler)(nil).GetURL), ctx, slug)
}

// InsertURL mocks base method.
func (m *Mockhandler) InsertURL(ctx context.Context, arg queries.InsertURLParams) (queries.InsertURLRow, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertURL", ctx, arg)
	ret0, _ := ret[0].(queries.InsertURLRow)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertURL indicates an expected call of InsertURL.
func (mr *MockhandlerMockRecorder) InsertURL(ctx, arg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertURL", reflect.TypeOf((*Mockhandler)(nil).InsertURL), ctx, arg)
}
